version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: hrgsms-database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-hrgsms_db}
      MYSQL_USER: ${DB_USER:-hrgsms_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-hrgsms_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./hrgsms-db:/docker-entrypoint-initdb.d
    networks:
      - hrgsms-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./hrgsms-backend
      dockerfile: Dockerfile
    container_name: hrgsms-backend
    restart: unless-stopped
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_USER: ${DB_USER:-hrgsms_user}
      DB_PASSWORD: ${DB_PASSWORD:-hrgsms_password}
      DB_NAME: ${DB_NAME:-hrgsms_db}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      JWT_ALGORITHM: HS256
      JWT_EXP_MINUTES: 1440
      APP_ENV: ${APP_ENV:-production}
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - hrgsms-network
    volumes:
      - ./hrgsms-backend:/app
      - /app/venv
      - /app/__pycache__

  # Frontend
  frontend:
    build:
      context: ./hrgsms-frontend
      dockerfile: Dockerfile
    container_name: hrgsms-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - hrgsms-network

volumes:
  mysql_data:
    driver: local

networks:
  hrgsms-network:
    driver: bridge
